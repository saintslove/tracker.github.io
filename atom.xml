<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Fox Mask</title>
  
  <subtitle>thick and thin</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://www.saintslove.top/"/>
  <updated>2018-05-10T05:42:50.344Z</updated>
  <id>https://www.saintslove.top/</id>
  
  <author>
    <name>Fox Mask</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Git第一弹</title>
    <link href="https://www.saintslove.top/2018/05/09/Git%E7%AC%AC%E4%B8%80%E5%BC%B9/"/>
    <id>https://www.saintslove.top/2018/05/09/Git第一弹/</id>
    <published>2018-05-09T09:43:17.000Z</published>
    <updated>2018-05-10T05:42:50.344Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="1"><a href="#1" class="headerlink" title="1. "></a><span id="inline-toc"><em>1.</em></span> <em><span class="label primary">获取Git仓库</span></em></h2><h4 id="在现有目录中创建仓库"><a href="#在现有目录中创建仓库" class="headerlink" title="在现有目录中创建仓库 "></a><div class="note primary"><p>在现有目录中创建仓库 </p></div></h4><p>&ensp;若是管理现有项目，需在项目所在目录进行初始化操作<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git init</span><br></pre></td></tr></table></figure></p><p>&ensp;该命令在项目所在目录生成隐含文件夹<code>.git</code>,包含初始化仓库必要文件，但项目文件并未被跟踪，因此还需跟踪这些文件并提交至仓库。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ git add .</span><br><span class="line">$ git commit -m<span class="string">'修改描述'</span></span><br></pre></td></tr></table></figure></p><h4 id="克隆现有仓库"><a href="#克隆现有仓库" class="headerlink" title="克隆现有仓库 "></a><div class="note primary"><p>克隆现有仓库 </p></div></h4><p>&ensp;若想将一已存在仓库克隆值本地，需使用<code>git clone [url]</code>命令，该命令会将远程仓库每一个文件克隆至本地，对于Git可链接库<code>libgit2</code>，可通过日下如下命令实现远程克隆：<br><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git <span class="keyword">clone</span> <span class="title">https</span>://github.com/libgit2/libgit2</span><br></pre></td></tr></table></figure></p><p>&ensp;此时会在当前目录下创建名为<code>libgit2</code>的目录，并在该目录下初始化一个隐含的<code>.git</code>文件，远程仓库拉取的数据均存入<code>.git</code>文件，并从中读取最新版本的文件拷贝。<br>&ensp;若想将<code>libgit2</code>克隆至自定义的仓库<code>mylibgit</code>时，可使用如下命令：<br><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git <span class="keyword">clone</span> <span class="title">https</span>://github.com/libgit2/libgit2 mylibgit</span><br></pre></td></tr></table></figure></p><p>&ensp;本次使用的<code>https://</code>协议，Git同时支持多种传输协议，包括<code>git://</code>协议，<code>SSH</code>协议，比如<code>user@server:path/to/repo.git</code>，在服务器上搭建 Git将会介绍所有这些协议在服务器端如何配置使用，以及各种方式之间的利弊。</p><hr><h2 id="2"><a href="#2" class="headerlink" title="2. "></a><span id="inline-toc"><em>2.</em></span> <em><span class="label primary">记录每次更新到仓库</span></em></h2><p>&ensp;工作目录下的每一个文件均呈现两种状态，<span id="inline-orange">已跟踪</span>或<span id="inline-orange">未跟踪</span>。已跟踪文件指被纳入版本控制系统的文件，在上一次快照中存在记录，在工作一段时间后，该文件可能被修改、未修改或存放于暂存区；剩余文件均处于未跟踪状态，均不存在于暂存区及最近一次的快照记录。初次克隆仓库中的文件均处于被跟踪状态。Git会对被修改的文件添加修改标记，Git文件的生命周期如下所示：<br><img src="http://p7vw4w30r.bkt.clouddn.com/%E6%96%87%E4%BB%B6%E7%8A%B6%E6%80%81%E5%8F%98%E5%8C%96%E5%91%A8%E6%9C%9F.png" alt="文件状态变化周期"></p><h4 id="检查当前文件状态"><a href="#检查当前文件状态" class="headerlink" title="检查当前文件状态 "></a><div class="note primary"><p>检查当前文件状态 </p></div></h4><p>&ensp;使用<code>git status</code>命令，对于初始克隆仓库，该命令显示结果如下：<br><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ git status</span><br><span class="line">On branch <span class="literal">master</span></span><br><span class="line">nothing to commit, working directory clean</span><br></pre></td></tr></table></figure></p><p>&ensp;表明工作区很干净，即已跟踪文件未被更改，此外还表明该目录未出现未被跟踪的文件，且当前处于<code>master</code>分支。此时新建README文件，使用<code>git status</code>命令显示如下:<br><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="keyword">echo</span> <span class="string">'My Project'</span> &gt; README</span><br><span class="line">$ git status</span><br><span class="line">On branch master</span><br><span class="line">Untracked <span class="keyword">file</span><span class="variable">s:</span></span><br><span class="line">(use <span class="string">"git add &lt;file&gt;..."</span> <span class="keyword">to</span> include in what will <span class="keyword">be</span> committed)</span><br><span class="line">README</span><br><span class="line">nothing added <span class="keyword">to</span> commit but untracked <span class="keyword">files</span> present (use <span class="string">"git add"</span> <span class="keyword">to</span> track)</span><br></pre></td></tr></table></figure></p><p>&ensp;状态显示README文件出现在Untracked files区域，表明该文件在之前的快照中不存在，<span id="inline-orange">Git不会自动将文件纳入跟踪范围</span>，除非明确告知Git需要跟踪该文件。</p><h4 id="跟踪新文件"><a href="#跟踪新文件" class="headerlink" title="跟踪新文件"></a><div class="note primary"><p>跟踪新文件</p></div></h4><p>&ensp;<code>git add</code>用于跟踪新文件或已跟踪文件存入暂存区，还能用于合并时把有冲突的文件标记为已解决状态等，将这个命令理解为“添加内容到下一次提交中”而不是“将一个文件添加到项目中”要更加合适，用法如下：</p><ul><li>&ensp;<code>git add [file]</code>&ensp;&ensp;&ensp;跟踪文件file</li><li>&ensp;<code>git add [Dir]</code>&ensp;&ensp;&ensp;递归跟踪路径Dir下的所有文件</li></ul><p>&ensp;跟踪README文件需使用<code>git add</code>命令，运行如下：<br><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git <span class="keyword">add</span><span class="bash"> README</span></span><br></pre></td></tr></table></figure></p><p>&ensp;随后运行<code>git status</code>命令，观察README文件新状态如下：<br><figure class="highlight vhdl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ git status</span><br><span class="line"><span class="keyword">On</span> branch master</span><br><span class="line">Changes <span class="keyword">to</span> be committed:</span><br><span class="line">(<span class="keyword">use</span> <span class="string">"git reset HEAD &lt;file&gt;..."</span> <span class="keyword">to</span> unstage)</span><br><span class="line"><span class="keyword">new</span> <span class="keyword">file</span>: README</span><br></pre></td></tr></table></figure></p><p>&ensp;<span id="inline-orange">Changes to be committed:</span>表明文件README已处于暂存状态，位于暂存区，一旦提交，该文件将被Git快照记录。</p><h4 id="暂存已修改文件"><a href="#暂存已修改文件" class="headerlink" title="暂存已修改文件"></a><div class="note primary"><p>暂存已修改文件</p></div></h4><p>&ensp;修改已跟踪文件CONTRIBUTING.md，随机运行命令<code>git status</code>，显示如下：<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">$ git status</span><br><span class="line">On branch master</span><br><span class="line">Changes to be committed:</span><br><span class="line">(<span class="keyword">use</span> <span class="string">"git reset HEAD &lt;file&gt;..."</span> <span class="keyword">to</span> unstage)</span><br><span class="line"><span class="keyword">new</span> <span class="keyword">file</span>: README</span><br><span class="line">Changes <span class="keyword">not</span> staged <span class="keyword">for</span> <span class="keyword">commit</span>:</span><br><span class="line">(<span class="keyword">use</span> <span class="string">"git add &lt;file&gt;..."</span> <span class="keyword">to</span> <span class="keyword">update</span> what will be committed)</span><br><span class="line">(<span class="keyword">use</span> <span class="string">"git checkout -- &lt;file&gt;..."</span> <span class="keyword">to</span> discard changes <span class="keyword">in</span> working <span class="keyword">directory</span>)</span><br><span class="line">modified: CONTRIBUTING.md</span><br></pre></td></tr></table></figure></p><p>&ensp;<span id="inline-orange">Changes not staged for commit:</span>表明CONTRIBUTING.md被更改但并未存入暂存区，运行命令<code>git add CONTRIBUTING.md</code>，显示如下：<br><figure class="highlight vhdl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$ git add CONTRIBUTING.md</span><br><span class="line">$ git status</span><br><span class="line"><span class="keyword">On</span> branch master</span><br><span class="line">Changes <span class="keyword">to</span> be committed:</span><br><span class="line">(<span class="keyword">use</span> <span class="string">"git reset HEAD &lt;file&gt;..."</span> <span class="keyword">to</span> unstage)</span><br><span class="line"><span class="keyword">new</span> <span class="keyword">file</span>: README</span><br><span class="line">modified: CONTRIBUTING.md</span><br></pre></td></tr></table></figure></p><p>&ensp;<span id="inline-orange">Changes to be committed:</span>，表明文件CONTRIBUTING.md已被存入暂存区，此时对CONTRIBUTING.md再次修改并存盘，随即运行命令<code>git status</code>，显示如下：<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">$ vim CONTRIBUTING.md</span><br><span class="line">$ git status</span><br><span class="line">On branch master</span><br><span class="line">Changes to be committed:</span><br><span class="line">(<span class="keyword">use</span> <span class="string">"git reset HEAD &lt;file&gt;..."</span> <span class="keyword">to</span> unstage)</span><br><span class="line"><span class="keyword">new</span> <span class="keyword">file</span>: README</span><br><span class="line">modified: CONTRIBUTING.md</span><br><span class="line">Changes <span class="keyword">not</span> staged <span class="keyword">for</span> <span class="keyword">commit</span>:</span><br><span class="line">(<span class="keyword">use</span> <span class="string">"git add &lt;file&gt;..."</span> <span class="keyword">to</span> <span class="keyword">update</span> what will be committed)</span><br><span class="line">(<span class="keyword">use</span> <span class="string">"git checkout -- &lt;file&gt;..."</span> <span class="keyword">to</span> discard changes <span class="keyword">in</span> working <span class="keyword">directory</span>)</span><br><span class="line">modified: CONTRIBUTING.md</span><br></pre></td></tr></table></figure></p><p>&ensp;可以看到CONTRIBUTING.md同时存在于<span id="inline-orange">Changes to be committed:</span>与<span id="inline-orange">Changes not staged for commit:</span>，因为Git仅暂存了运行<code>git add</code>命令的版本，因此在修改文件后续运行命令<code>git add</code>重新跟踪文件。<br><figure class="highlight vhdl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$ git add CONTRIBUTING.md</span><br><span class="line">$ git status</span><br><span class="line"><span class="keyword">On</span> branch master</span><br><span class="line">Changes <span class="keyword">to</span> be committed:</span><br><span class="line">(<span class="keyword">use</span> <span class="string">"git reset HEAD &lt;file&gt;..."</span> <span class="keyword">to</span> unstage)</span><br><span class="line"><span class="keyword">new</span> <span class="keyword">file</span>: README</span><br><span class="line">modified: CONTRIBUTING.md</span><br></pre></td></tr></table></figure></p><p>&ensp;可通过运行命令<code>git status -s</code>获得文件状态的简明报告，输出如下：<br><figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$ git status -s</span><br><span class="line">M README</span><br><span class="line">MM Rakefile</span><br><span class="line">A <span class="class"><span class="keyword">lib</span>/<span class="title">git</span>.<span class="title">rb</span></span></span><br><span class="line">M <span class="class"><span class="keyword">lib</span>/<span class="title">simplegit</span>.<span class="title">rb</span></span></span><br><span class="line">?? LICENSE.txt</span><br></pre></td></tr></table></figure></p><ul><li>&ensp;<span id="inline-orange">??</span>&ensp;&ensp;LICENSE.txt为新添加的未被跟踪文件</li><li>&ensp;<span id="inline-orange">M</span>&ensp;&ensp;README在工作区被修改但并未存入暂存区</li><li>&ensp;<span id="inline-orange">A</span>&ensp;&ensp;lib/git.rb被修改后并添加至暂存区</li><li>&ensp;<span id="inline-orange">MM</span>&ensp;&ensp;左侧M表示Rakefile被修改并放入暂存区,右侧M表示Rakefile被修改但未存入暂存区,因此Rakefile在工作区被修改并提交到暂存区后又在工作区中被修改了,所以在暂存区和工作区都有该文件被修改了的记录</li></ul><h4 id="忽略文件"><a href="#忽略文件" class="headerlink" title="忽略文件"></a><div class="note primary"><p>忽略文件</p></div></h4><p>&ensp;对于不想出现在未跟踪文件列表或无需纳入Git管理的文件,可以通过创建文件<code>.gitignore</code>,列出要忽略的文件模式，模式采用<code>shell</code>格式,文件.gitignore 的格式规范如下,更多内容可访问<a href="https://github.com/github/gitignore" target="_blank" rel="noopener">.gitignore文件列表</a>：</p><ul><li>所有空行或者以＃开头的行都会被 Git 忽略</li><li>可以使用标准的glob模式匹配</li><li>匹配模式可以以/开头防止递归</li><li>匹配模式可以以/结尾指定目录</li><li>要忽略指定模式以外的文件或目录，可以在模式前加上惊叹号（!）取反</li></ul><p>&ensp;所谓的 glob 模式是指 shell所使用的简化了的正则表达式。星号(*)匹配零个或多个任意字符;[abc] 匹配任何一个列在方括号中的字符（这个例子要么匹配一个a,要么匹配一个b,要么匹配一个 c；问号(?)只匹配一个任意字符；[0-9] 匹配所有0到9的数字;使用两个星号(**) 表示匹配任意中间目录,比如a/**/z可以匹配a/z,a/b/z 或 a/b/c/z等。<br>实例如下：<br><figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># no .a files</span></span><br><span class="line">*.a</span><br><span class="line"><span class="comment"># but do track lib.a, even though you're ignoring .a files above</span></span><br><span class="line">!<span class="class"><span class="keyword">lib</span>.<span class="title">a</span></span></span><br><span class="line"><span class="comment"># only ignore the TODO file in the current directory, not subdir/TODO</span></span><br><span class="line">/TODO</span><br><span class="line"><span class="comment"># ignore all files in the build/ directory</span></span><br><span class="line">build/</span><br><span class="line"><span class="comment"># ignore doc/notes.txt, but not doc/server/arch.txt</span></span><br><span class="line">doc/*.txt</span><br><span class="line"><span class="comment"># ignore all .pdf files in the doc/ directory</span></span><br><span class="line">doc/**<span class="regexp">/*.pdf</span></span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      获取/克隆仓库、检查文件状态、跟踪新文件、暂存已修改文件、忽略文件
    
    </summary>
    
      <category term="Git教程" scheme="https://www.saintslove.top/categories/Git%E6%95%99%E7%A8%8B/"/>
    
    
      <category term="git" scheme="https://www.saintslove.top/tags/git/"/>
    
      <category term="集中式版本控制" scheme="https://www.saintslove.top/tags/%E9%9B%86%E4%B8%AD%E5%BC%8F%E7%89%88%E6%9C%AC%E6%8E%A7%E5%88%B6/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://www.saintslove.top/2018/04/26/hello-world/"/>
    <id>https://www.saintslove.top/2018/04/26/hello-world/</id>
    <published>2018-04-26T09:03:09.000Z</published>
    <updated>2018-05-09T14:31:51.592Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><span id="inline-yellow">Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post.<br>Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info.<br>If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.<br></span></p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p><span id="inline-green">More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a><br></span></p><font color="blue" size="3"><br><i class="fa fa-pencil"></i>支持Markdown<br></font><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p><span id="inline-blue">More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a><br></span></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p><span id="inline-purple">More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a><br></span></p><h3 id="Deploy-to-remote-sites-Download-Now"><a href="#Deploy-to-remote-sites-Download-Now" class="headerlink" title="Deploy to remote sites   Download Now "></a>Deploy to remote sites  <a id="download" href="https://git-scm.com/download/win" target="_blank" rel="noopener"><i class="fa fa-download"></i><span> Download Now</span> </a></h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p><span id="inline-orange">More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a><br></span></p>        <div id="aplayer-kByAAkgz" class="aplayer aplayer-tag-marker" style="margin-bottom: 20px;"></div>  <script>  var options = {"narrow":false,"autoplay":false,"showlrc":3,"mutex":true,"music":[{"title":"成都","author":"赵雷","url":"http://p7vw4w30r.bkt.clouddn.com/%E8%B5%B5%E9%9B%B7%20-%20%E6%88%90%E9%83%BD.mp3","pic":"http://p7vw4w30r.bkt.clouddn.com/%E6%88%90%E9%83%BD.jpg","lrc":"http://p7vw4w30r.bkt.clouddn.com/%E6%88%90%E9%83%BD_%E6%AD%8C%E8%AF%8D.lrc"}]};  options.element = document.getElementById("aplayer-kByAAkgz");  var ap = new APlayer(options);    window.aplayers || (window.aplayers = []);  window.aplayers.push(ap);  </script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
  </entry>
  
</feed>
